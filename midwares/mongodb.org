#+TITLE:     MongoDB
#+AUTHOR:    Hao Ruan
#+EMAIL:     haoru@cisco.com
#+LANGUAGE:  en
#+LINK_HOME: http://www.github.com/ruanhao
#+OPTIONS:   h:6 html-postamble:nil html-preamble:t tex:t f:t ^:nil
#+STARTUP:   showall
#+TOC:       headlines 3
#+HTML_DOCTYPE: <!DOCTYPE html>
#+HTML_HEAD: <link href="http://fonts.googleapis.com/css?family=Roboto+Slab:400,700|Inconsolata:400,700" rel="stylesheet" type="text/css" />
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="https://www.pirilampo.org/styles/readtheorg/css/htmlize.css"/>
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="../org-html-themes/readtheorg/readtheorg.css"/>
#+HTML_HEAD: <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.3/jquery.min.js"></script>
#+HTML_HEAD: <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.4/js/bootstrap.min.js"></script>
#+HTML_HEAD: <script type="text/javascript" src="https://www.pirilampo.org/styles/lib/js/jquery.stickytableheaders.min.js"></script>
#+HTML_HEAD: <script type="text/javascript" src="https://www.pirilampo.org/styles/readtheorg/js/readtheorg.js"></script>
#+HTML: <div class="outline-2" id="meta">
| Author   | {{{author}}} ({{{email}}})    |
| Date     | {{{time(%Y-%m-%d %H:%M:%S)}}} |
#+HTML: </div>

* Emacs 设置

1. 安装 [[https://github.com/krisajenkins/ob-mongo][ob-mongo]]
2. =rm -rf ~/.emacs.d/elpa/org-xxxxxxx/*.elc=



* 查询

#+CAPTION: 查询
#+NAME: query
[[file:img/crud-annotated-mongodb-find.bakedsvg.svg]]

** 基本查询

#+BEGIN_SRC mongo :host localhost :port 27017 :db emacs
  db.inventory.insertMany([
      { item: "journal",  qty: 25,  size: { h: 14,    w: 21,    uom: "cm" }, status: "A" },
      { item: "notebook", qty: 50,  size: { h: 8.5,   w: 11,    uom: "in" }, status: "A" },
      { item: "paper",    qty: 100, size: { h: 8.5,   w: 11,    uom: "in" }, status: "D" },
      { item: "planner",  qty: 75,  size: { h: 22.85, w: 30,    uom: "cm" }, status: "D" },
      { item: "postcard", qty: 45,  size: { h: 10,    w: 15.25, uom: "cm" }, status: "A" }
  ]);
#+END_SRC

#+RESULTS:
#+begin_example
Mongo-Hacker 0.0.14
{
  "acknowledged": true,
  "insertedIds": [
    ObjectId("5afcf55ea79692f89606ccae"),
    ObjectId("5afcf55ea79692f89606ccaf"),
    ObjectId("5afcf55ea79692f89606ccb0"),
    ObjectId("5afcf55ea79692f89606ccb1"),
    ObjectId("5afcf55ea79692f89606ccb2")
  ]
}
#+end_example

*** 查询所有

#+BEGIN_SRC mongo
  db.inventory.find({})
#+END_SRC

*** 指定相等条件

#+BEGIN_SRC mongo
  db.inventory.find( { status: "D" } )
#+END_SRC

*** 查询操作符

#+BEGIN_SRC mongo
  db.inventory.find( { status: { $in: [ "A", "D" ] } } )
#+END_SRC

*** 与或条件

- AND

#+BEGIN_SRC mongo
  db.inventory.find( { status: "A", qty: { $lt: 30 } } )
#+END_SRC

- OR

#+BEGIN_SRC mongo
  db.inventory.find( { $or: [ { status: "A" }, { qty: { $lt: 30 } } ] } )
#+END_SRC


- AND/OR

#+BEGIN_SRC mongo
  db.inventory.find( {
      status: "A",
      $or: [ { qty: { $lt: 30 } }, { item: /^p/ } ]
  } )
#+END_SRC

*** 查询内嵌文档


#+BEGIN_SRC mongo :host localhost :port 27017 :db emacs :exports both
  db.inventory.find( { "size.h": { $lt: 15 }, "size.uom": "in", status: "D" } )
#+END_SRC

#+RESULTS:
#+begin_example
Mongo-Hacker 0.0.14
{
  "_id": ObjectId("5afcf55ea79692f89606ccb0"),
  "item": "paper",
  "qty": 100,
  "size": {
    "h": 8.5,
    "w": 11,
    "uom": "in"
  },
  "status": "D"
}
{
  "_id": ObjectId("5afcf69e6b80eeb86ce1214b"),
  "item": "paper",
  "qty": 100,
  "size": {
    "h": 8.5,
    "w": 11,
    "uom": "in"
  },
  "status": "D"
}
Fetched 2 record(s) in 1ms
#+end_example


** 查询数组

#+BEGIN_SRC mongo :host localhost :port 27017 :db emacs
  db.inventory.insertMany([
      { item: "journal",  qty: 25,  tags: ["blank", "red"],          dim_cm: [ 14, 21 ] },
      { item: "notebook", qty: 50,  tags: ["red", "blank"],          dim_cm: [ 14, 21 ] },
      { item: "paper",    qty: 100, tags: ["red", "blank", "plain"], dim_cm: [ 14, 21 ] },
      { item: "planner",  qty: 75,  tags: ["blank", "red"],          dim_cm: [ 22.85, 30 ] },
      { item: "postcard", qty: 45,  tags: ["blue"],                  dim_cm: [ 10, 15.25 ] }
  ]);
#+END_SRC

#+RESULTS:
#+begin_example
Mongo-Hacker 0.0.14
{
  "acknowledged": true,
  "insertedIds": [
    ObjectId("5afd147215241dd2cdb767cb"),
    ObjectId("5afd147215241dd2cdb767cc"),
    ObjectId("5afd147215241dd2cdb767cd"),
    ObjectId("5afd147215241dd2cdb767ce"),
    ObjectId("5afd147215241dd2cdb767cf")
  ]
}
#+end_example

*** 查询数组中的元素

下述语法都是表示 *数组中是否有一个元素满足条件*

  #+BEGIN_SRC mongo :host localhost :port 27017 :db emacs :exports both
    db.inventory.find( { tags: "red" } ).limit(1)
  #+END_SRC

  #+RESULTS:
  #+begin_example
  Mongo-Hacker 0.0.14
  {
    "_id": ObjectId("5afd147215241dd2cdb767cb"),
    "item": "journal",
    "qty": 25,
    "tags": [
      "blank",
      "red"
    ],
    "dim_cm": [
      14,
      21
    ]
  }
  Fetched 1 record(s) in 4ms
  #+end_example

#+BEGIN_SRC mongo :host localhost :port 27017 :db emacs :exports both
  db.inventory.find( { dim_cm: { $gt: 25 } } )
#+END_SRC

#+RESULTS:
#+begin_example
Mongo-Hacker 0.0.14
{
  "_id": ObjectId("5afd147215241dd2cdb767ce"),
  "item": "planner",
  "qty": 75,
  "tags": [
    "blank",
    "red"
  ],
  "dim_cm": [
    22.85,
    30
  ]
}
Fetched 1 record(s) in 1ms
#+end_example

*** 为元素指定多个条件

下述例子不是针对某个元素，而是指 *是否有一个大于15，有另一个小于20*

#+BEGIN_SRC mongo :host localhost :port 27017 :db emacs :exports both
  db.inventory.find( { dim_cm: { $gt: 15, $lt: 20 } } ).limit(1)
#+END_SRC

#+RESULTS:
#+begin_example
Mongo-Hacker 0.0.14
{
  "_id": ObjectId("5afd147215241dd2cdb767cb"),
  "item": "journal",
  "qty": 25,
  "tags": [
    "blank",
    "red"
  ],
  "dim_cm": [
    14,
    21
  ]
}
Fetched 1 record(s) in 1ms
#+end_example

使用 *$elemMatch* 针对某个元素进行查询

#+BEGIN_SRC mongo :host localhost :port 27017 :db emacs :exports both
  db.inventory.find( { dim_cm: { $elemMatch: { $gt: 22, $lt: 30 } } } )
#+END_SRC

#+RESULTS:
#+begin_example
Mongo-Hacker 0.0.14
{
  "_id": ObjectId("5afd147215241dd2cdb767ce"),
  "item": "planner",
  "qty": 75,
  "tags": [
    "blank",
    "red"
  ],
  "dim_cm": [
    22.85,
    30
  ]
}
Fetched 1 record(s) in 3ms
#+end_example

*** 通过数组下标进行查询

#+BEGIN_SRC mongo :host localhost :port 27017 :db emacs :exports both
  db.inventory.find( { "dim_cm.1": { $gt: 25 } } )
#+END_SRC

#+RESULTS:
#+begin_example
Mongo-Hacker 0.0.14
{
  "_id": ObjectId("5afd147215241dd2cdb767ce"),
  "item": "planner",
  "qty": 75,
  "tags": [
    "blank",
    "red"
  ],
  "dim_cm": [
    22.85,
    30
  ]
}
Fetched 1 record(s) in 1ms
#+end_example

*** 通过数组长度查询

#+BEGIN_SRC mongo :host localhost :port 27017 :db emacs :exports both
  db.inventory.find( { "tags": { $size: 3 } } )
#+END_SRC

#+RESULTS:
#+begin_example
Mongo-Hacker 0.0.14
{
  "_id": ObjectId("5afd147215241dd2cdb767cd"),
  "item": "paper",
  "qty": 100,
  "tags": [
    "red",
    "blank",
    "plain"
  ],
  "dim_cm": [
    14,
    21
  ]
}
Fetched 1 record(s) in 1ms
#+end_example


** 查询内嵌文档数组

#+BEGIN_SRC mongo :host localhost :port 27017 :db emacs
  db.inventory.insertMany( [
      { item: "journal",  instock: [ { warehouse: "A", qty: 5 }, { warehouse: "C", qty: 15 } ] },
      { item: "notebook", instock: [ { warehouse: "C", qty: 5 } ] },
      { item: "paper",    instock: [ { warehouse: "A", qty: 60 }, { warehouse: "B", qty: 15 } ] },
      { item: "planner",  instock: [ { warehouse: "A", qty: 40 }, { warehouse: "B", qty: 5 } ] },
      { item: "postcard", instock: [ { warehouse: "B", qty: 15 }, { warehouse: "C", qty: 35 } ] }
  ]);
#+END_SRC

#+RESULTS:
#+begin_example
Mongo-Hacker 0.0.14
{
  "acknowledged": true,
  "insertedIds": [
    ObjectId("5afd1a3dd67e8e37de8014fb"),
    ObjectId("5afd1a3dd67e8e37de8014fc"),
    ObjectId("5afd1a3dd67e8e37de8014fd"),
    ObjectId("5afd1a3dd67e8e37de8014fe"),
    ObjectId("5afd1a3dd67e8e37de8014ff")
  ]
}
#+end_example

*** 对字段查询

#+BEGIN_SRC mongo :host localhost :port 27017 :db emacs :exports both
  db.inventory.find( { 'instock.qty': { $lte: 20 } } )
#+END_SRC

#+RESULTS:
#+begin_example
Mongo-Hacker 0.0.14
{
  "_id": ObjectId("5afd1a3dd67e8e37de8014fb"),
  "item": "journal",
  "instock": [
    {
      "warehouse": "A",
      "qty": 5
    },
    {
      "warehouse": "C",
      "qty": 15
    }
  ]
}
{
  "_id": ObjectId("5afd1a3dd67e8e37de8014fc"),
  "item": "notebook",
  "instock": [
    {
      "warehouse": "C",
      "qty": 5
    }
  ]
}
{
  "_id": ObjectId("5afd1a3dd67e8e37de8014fd"),
  "item": "paper",
  "instock": [
    {
      "warehouse": "A",
      "qty": 60
    },
    {
      "warehouse": "B",
      "qty": 15
    }
  ]
}
{
  "_id": ObjectId("5afd1a3dd67e8e37de8014fe"),
  "item": "planner",
  "instock": [
    {
      "warehouse": "A",
      "qty": 40
    },
    {
      "warehouse": "B",
      "qty": 5
    }
  ]
}
{
  "_id": ObjectId("5afd1a3dd67e8e37de8014ff"),
  "item": "postcard",
  "instock": [
    {
      "warehouse": "B",
      "qty": 15
    },
    {
      "warehouse": "C",
      "qty": 35
    }
  ]
}
Fetched 5 record(s) in 3ms
#+end_example



*** 使用索引查询

#+BEGIN_SRC mongo :host localhost :port 27017 :db emacs :exports both
  db.inventory.find( { 'instock.0.qty': { $lte: 20 } } )
#+END_SRC

#+RESULTS:
#+begin_example
Mongo-Hacker 0.0.14
{
  "_id": ObjectId("5afd1a3dd67e8e37de8014fb"),
  "item": "journal",
  "instock": [
    {
      "warehouse": "A",
      "qty": 5
    },
    {
      "warehouse": "C",
      "qty": 15
    }
  ]
}
{
  "_id": ObjectId("5afd1a3dd67e8e37de8014fc"),
  "item": "notebook",
  "instock": [
    {
      "warehouse": "C",
      "qty": 5
    }
  ]
}
{
  "_id": ObjectId("5afd1a3dd67e8e37de8014ff"),
  "item": "postcard",
  "instock": [
    {
      "warehouse": "B",
      "qty": 15
    },
    {
      "warehouse": "C",
      "qty": 35
    }
  ]
}
Fetched 3 record(s) in 4ms
#+end_example

*** 指定多个条件

- 针对单个文档

#+BEGIN_SRC mongo :host localhost :port 27017 :db emacs :exports both
  db.inventory.find( { "instock": { $elemMatch: { qty: 5, warehouse: "A" } } } )
#+END_SRC

#+RESULTS:
#+begin_example
Mongo-Hacker 0.0.14
{
  "_id": ObjectId("5afd1a3dd67e8e37de8014fb"),
  "item": "journal",
  "instock": [
    {
      "warehouse": "A",
      "qty": 5
    },
    {
      "warehouse": "C",
      "qty": 15
    }
  ]
}
Fetched 1 record(s) in 1ms
#+end_example


#+BEGIN_SRC mongo :host localhost :port 27017 :db emacs :exports both
  db.inventory.find( { "instock": { $elemMatch: { qty: { $gt: 10, $lte: 20 } } } } )
#+END_SRC

#+RESULTS:
#+begin_example
Mongo-Hacker 0.0.14
{
  "_id": ObjectId("5afd1a3dd67e8e37de8014fb"),
  "item": "journal",
  "instock": [
    {
      "warehouse": "A",
      "qty": 5
    },
    {
      "warehouse": "C",
      "qty": 15
    }
  ]
}
{
  "_id": ObjectId("5afd1a3dd67e8e37de8014fd"),
  "item": "paper",
  "instock": [
    {
      "warehouse": "A",
      "qty": 60
    },
    {
      "warehouse": "B",
      "qty": 15
    }
  ]
}
{
  "_id": ObjectId("5afd1a3dd67e8e37de8014ff"),
  "item": "postcard",
  "instock": [
    {
      "warehouse": "B",
      "qty": 15
    },
    {
      "warehouse": "C",
      "qty": 35
    }
  ]
}
Fetched 3 record(s) in 2ms
#+end_example

- 不针对单个文档

#+BEGIN_SRC mongo :host localhost :port 27017 :db emacs :exports both
  db.inventory.find( { "instock.qty": { $gt: 10,  $lte: 20 } } )
#+END_SRC

#+RESULTS:
#+begin_example
Mongo-Hacker 0.0.14
{
  "_id": ObjectId("5afd1a3dd67e8e37de8014fb"),
  "item": "journal",
  "instock": [
    {
      "warehouse": "A",
      "qty": 5
    },
    {
      "warehouse": "C",
      "qty": 15
    }
  ]
}
{
  "_id": ObjectId("5afd1a3dd67e8e37de8014fd"),
  "item": "paper",
  "instock": [
    {
      "warehouse": "A",
      "qty": 60
    },
    {
      "warehouse": "B",
      "qty": 15
    }
  ]
}
{
  "_id": ObjectId("5afd1a3dd67e8e37de8014fe"),
  "item": "planner",
  "instock": [
    {
      "warehouse": "A",
      "qty": 40
    },
    {
      "warehouse": "B",
      "qty": 5
    }
  ]
}
{
  "_id": ObjectId("5afd1a3dd67e8e37de8014ff"),
  "item": "postcard",
  "instock": [
    {
      "warehouse": "B",
      "qty": 15
    },
    {
      "warehouse": "C",
      "qty": 35
    }
  ]
}
Fetched 4 record(s) in 2ms
#+end_example

#+BEGIN_SRC mongo :host localhost :port 27017 :db emacs :exports both
  db.inventory.find( { "instock.qty": 5, "instock.warehouse": "A" } )
#+END_SRC

#+RESULTS:
#+begin_example
Mongo-Hacker 0.0.14
{
  "_id": ObjectId("5afd1a3dd67e8e37de8014fb"),
  "item": "journal",
  "instock": [
    {
      "warehouse": "A",
      "qty": 5
    },
    {
      "warehouse": "C",
      "qty": 15
    }
  ]
}
{
  "_id": ObjectId("5afd1a3dd67e8e37de8014fe"),
  "item": "planner",
  "instock": [
    {
      "warehouse": "A",
      "qty": 40
    },
    {
      "warehouse": "B",
      "qty": 5
    }
  ]
}
Fetched 2 record(s) in 2ms
#+end_example






** 对查询结果投影

#+BEGIN_SRC mongo :host localhost :port 27017 :db emacs
  db.inventory.insertMany( [
      { item: "journal",
        status: "A",
        size: { h: 14, w: 21, uom: "cm" },
        instock: [ { warehouse: "A", qty: 5 } ] },
      { item: "notebook",
        status: "A",
        size: { h: 8.5, w: 11, uom: "in" },
        instock: [ { warehouse: "C", qty: 5 } ] },
      { item: "paper",
        status: "D",
        size: { h: 8.5, w: 11, uom: "in" },
        instock: [ { warehouse: "A", qty: 60 } ] },
      { item: "planner",
        status: "D",
        size: { h: 22.85, w: 30, uom: "cm" },
        instock: [ { warehouse: "A", qty: 40 } ] },
      { item: "postcard",
        status: "A",
        size: { h: 10, w: 15.25, uom: "cm" },
        instock: [ { warehouse: "B", qty: 15 }, { warehouse: "C", qty: 35 } ] }
  ]);
#+END_SRC

#+RESULTS:
#+begin_example
Mongo-Hacker 0.0.14
{
  "acknowledged": true,
  "insertedIds": [
    ObjectId("5afd219310a81f112bcd9a50"),
    ObjectId("5afd219310a81f112bcd9a51"),
    ObjectId("5afd219310a81f112bcd9a52"),
    ObjectId("5afd219310a81f112bcd9a53"),
    ObjectId("5afd219310a81f112bcd9a54")
  ]
}
#+end_example

*** 包含某些字段

#+BEGIN_SRC mongo :host localhost :port 27017 :db emacs :exports both
  db.inventory.find( { status: "A" }, { item: 1, status: 1, _id: 0 } ).limit(3)
#+END_SRC

#+RESULTS:
#+begin_example
Mongo-Hacker 0.0.14
{
  "item": "journal",
  "status": "A"
}
{
  "item": "notebook",
  "status": "A"
}
{
  "item": "postcard",
  "status": "A"
}
Fetched 3 record(s) in 1ms
#+end_example


*** 排除某些字段

#+BEGIN_SRC mongo :host localhost :port 27017 :db emacs :exports both
  db.inventory.find( { status: "A" }, { status: 0, instock: 0 } ).limit(3)
#+END_SRC

#+RESULTS:
#+begin_example
Mongo-Hacker 0.0.14
{
  "_id": ObjectId("5afcf55ea79692f89606ccae"),
  "item": "journal",
  "qty": 25,
  "size": {
    "h": 14,
    "w": 21,
    "uom": "cm"
  }
}
{
  "_id": ObjectId("5afcf55ea79692f89606ccaf"),
  "item": "notebook",
  "qty": 50,
  "size": {
    "h": 8.5,
    "w": 11,
    "uom": "in"
  }
}
{
  "_id": ObjectId("5afcf55ea79692f89606ccb2"),
  "item": "postcard",
  "qty": 45,
  "size": {
    "h": 10,
    "w": 15.25,
    "uom": "cm"
  }
}
Fetched 3 record(s) in 1ms
#+end_example

*** 对内嵌文档字段投影

#+BEGIN_SRC mongo :host localhost :port 27017 :db emacs :exports both
  db.inventory.find(
     { status: "A" },
     { item: 1, status: 1, "size.uom": 1 }
  ).limit(3)
#+END_SRC

#+RESULTS:
#+begin_example
Mongo-Hacker 0.0.14
{
  "_id": ObjectId("5afcf55ea79692f89606ccae"),
  "item": "journal",
  "size": {
    "uom": "cm"
  },
  "status": "A"
}
{
  "_id": ObjectId("5afcf55ea79692f89606ccaf"),
  "item": "notebook",
  "size": {
    "uom": "in"
  },
  "status": "A"
}
{
  "_id": ObjectId("5afcf55ea79692f89606ccb2"),
  "item": "postcard",
  "size": {
    "uom": "cm"
  },
  "status": "A"
}
Fetched 3 record(s) in 2ms
#+end_example

*** 对内嵌文档数组字段投影

#+BEGIN_SRC mongo :host localhost :port 27017 :db emacs :exports both
  db.inventory.find( { status: "A" }, { item: 1, status: 1, "instock.qty": 1 } ).limit(3)
#+END_SRC

#+RESULTS:
#+begin_example
Mongo-Hacker 0.0.14
{
  "_id": ObjectId("5afcf55ea79692f89606ccae"),
  "item": "journal",
  "status": "A"
}
{
  "_id": ObjectId("5afcf55ea79692f89606ccaf"),
  "item": "notebook",
  "status": "A"
}
{
  "_id": ObjectId("5afcf55ea79692f89606ccb2"),
  "item": "postcard",
  "status": "A"
}
Fetched 3 record(s) in 2ms
#+end_example

*** 对返回结果中数组投影

只能使用 [[https://docs.mongodb.com/manual/reference/operator/projection/elemMatch/#proj._S_elemMatch][$elemMatch]], [[https://docs.mongodb.com/manual/reference/operator/projection/slice/#proj._S_slice][$slice]], [[https://docs.mongodb.com/manual/reference/operator/projection/positional/#proj._S_][$]] 对返回结果中的数组进行投影

#+BEGIN_SRC mongo :host localhost :port 27017 :db emacs :exports both
  db.inventory.find( { status: "A" }, { item: 1, status: 1, instock: { $slice: -1 } } ).limit(3)
#+END_SRC

#+RESULTS:
#+begin_example
Mongo-Hacker 0.0.14
{
  "_id": ObjectId("5afd219310a81f112bcd9a50"),
  "item": "journal",
  "status": "A",
  "instock": [
    {
      "warehouse": "A",
      "qty": 5
    }
  ]
}
{
  "_id": ObjectId("5afd219310a81f112bcd9a51"),
  "item": "notebook",
  "status": "A",
  "instock": [
    {
      "warehouse": "C",
      "qty": 5
    }
  ]
}
{
  "_id": ObjectId("5afd219310a81f112bcd9a54"),
  "item": "postcard",
  "status": "A",
  "instock": [
    {
      "warehouse": "C",
      "qty": 35
    }
  ]
}
Fetched 3 record(s) in 2ms
#+end_example


** 查询 Null 或 Missing 字段

#+BEGIN_SRC mongo :host localhost :port 27017 :db emacs
  db.inventory.insertMany([
     { _id: 1, item: null },
     { _id: 2 }
  ])
#+END_SRC

#+RESULTS:
: Mongo-Hacker 0.0.14
: {
:   "acknowledged": true,
:   "insertedIds": [
:     1,
:     2
:   ]
: }

*** 空值检查

#+BEGIN_SRC mongo :host localhost :port 27017 :db emacs :exports both
  db.inventory.find( { item: null } )
#+END_SRC

#+RESULTS:
: Mongo-Hacker 0.0.14
: {
:   "_id": 1,
:   "item": null
: }
: {
:   "_id": 2
: }
: Fetched 2 record(s) in 1ms


*** 类型检查

[[https://docs.mongodb.com/manual/reference/bson-types/][BSON Type]]

#+BEGIN_SRC mongo :host localhost :port 27017 :db emacs :exports both
  db.inventory.find( { item : { $type: 10 } } )
#+END_SRC

#+RESULTS:
: Mongo-Hacker 0.0.14
: {
:   "_id": 1,
:   "item": null
: }
: Fetched 1 record(s) in 1ms

*** 字段存在检查

#+BEGIN_SRC mongo :host localhost :port 27017 :db emacs :exports both
  db.inventory.find( { item : { $exists: false } } )
#+END_SRC

#+RESULTS:
: Mongo-Hacker 0.0.14
: {
:   "_id": 2
: }
: Fetched 1 record(s) in 1ms


** [[https://docs.mongodb.com/manual/tutorial/iterate-a-cursor/][在 shell 中使用游标]]

The =db.collection.find()= method returns a cursor. To access the documents, you need to iterate the cursor.

However, in the mongo shell, if the returned cursor is not assigned to a variable using the var keyword,
then the cursor is automatically *iterated up to 20 times* to print up to the first 20 documents in the results.



* 聚合

** Pipeline

The aggregation pipeline is a framework for data aggregation modeled on the concept of data processing pipelines.
Documents enter a *multi-stage pipeline* that transforms the documents into aggregated results.

#+CAPTION: Pipeline
#+NAME: pipeline
[[file:img/aggregation-pipeline.bakedsvg.svg]]

[[https://docs.mongodb.com/manual/meta/aggregation-quick-reference/][快速参考]]
