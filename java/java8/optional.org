#+TITLE:     Optional
#+AUTHOR:    Hao Ruan
#+EMAIL:     ruanhao1116@gmail.com
#+LANGUAGE:  en
#+LINK_HOME: http://www.github.com/ruanhao
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="../css/style.css" />
#+OPTIONS:   H:2 num:nil \n:nil @:t ::t |:t ^:{} _:{} *:t TeX:t LaTeX:t
#+STARTUP:   showall

* 1, 基本原理

不推荐使用基础类型的 Optional ，因为基础类型的 Optional 不支持map，flatMap 以及 filter 方法，\\
而这些却是 Optional 类最有用的方法。

* 2, 代码示例

** 2.1, 类三元操作符

以不解包的方式组合两个 Optional 对象，用一行语句实现条件判断的结构：

#+BEGIN_SRC java
  public Optional<Insurance> nullSafeFindCheapestInsurance(Optional<Person> person, Optional<Car> car) {
      return person.flatMap(p -> car.map(c -> findCheapestInsurance(p, c)));
  }
#+END_SRC

** 2.2, 避免在 Null 对象上调用 stream()

#+BEGIN_SRC java
  org.apache.commons.collections4.CollectionUtils.emptyIfNull(list)
      .stream()
      .filter(...);
#+END_SRC
