#+TITLE:     enum
#+AUTHOR:    Hao Ruan
#+EMAIL:     ruanhao1116@gmail.com
#+LANGUAGE:  en
#+LINK_HOME: http://www.github.com/ruanhao
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="../css/style.css" />
#+OPTIONS:   H:2 num:nil \n:nil @:t ::t |:t ^:{} _:{} *:t TeX:t LaTeX:t
#+STARTUP:   showall



+ Enum 是特殊的类

+ 只有一个对象的 Enum 可以用作单例

** 创建 Enum

#+BEGIN_SRC java

  enum Day {
      DAY1, DAY2, DAY3;
  }

#+END_SRC

** 复杂 Enum

#+BEGIN_SRC java
  enum Day {
      DAY1 {
          @Override
              public void tell() {
              System.out.println("DAY1");
          }
      },
      DAY2 {
          @Override
              public void tell() {
              System.out.println("DAY2");
          }
      };

      private int day;

      private Day(){} // Constructor must use private

      private Day(int day) { // Constructor using parameter
          this.day = day;
      }

      public abstract void tell(); // abstract method

      public int getDay() {  // instance method
          return this.day;
      }
  }

#+END_SRC

Test:

#+BEGIN_SRC java
    Day day = Day.DAY1;
    System.out.println("name: " + day.name() + ", ordinal: " + day.ordinal() + ", day: " + day.getDay());
    // name: DAY1, ordinal: 0, day: 0
    System.out.println("day: " + Day.valueOf("DAY2") + ", values.length: " + Day.values().length);
    // day: DAY2, values.length: 2
#+END_SRC
