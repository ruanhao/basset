#+TITLE:     Notes
#+AUTHOR:    Hao Ruan
#+EMAIL:     ruanhao1116@gmail.com
#+LANGUAGE:  en
#+LINK_HOME: http://www.github.com/ruanhao
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="../css/style.css" />
#+OPTIONS:   H:2 num:nil \n:nil @:t ::t |:t ^:{} _:{} *:t TeX:t LaTeX:t
#+STARTUP:   showall

** 字符串的拼接是由编译器完成的

+ 对于 String 类型，编译器维持不变

+ 对于基本类型，编译器对其装箱并调用 toString() 方法

+ 对于其他类型，编译器直接调用 toString() 方法

#+BEGIN_SRC java
  List<String> list = new ArrayList<>();
  Method mAdd = list.getClass().getMethod("add", Object.class);
  mAdd.invoke(list, 123);
  System.out.println(list.get(0)); // Right at compilation stage
                                   // Wrong at runtime state
                                   // [ java.lang.Integer cannot be cast to java.lang.String ]
  /** 原因分析：
   令 obj = list.get(0)，编译器认为 obj 是 String 类型，因此对参数不做任何调整，运行时直接调用 System.out.println(obj)
   而运行时 obj 实际为 Integer 类型，与 println 函数签名不一致导致出错

   若将泛型改为其他类型（非 String ，非基本类型）则编译器将调整为 System.out.println(obj.toString)
   如此，运行正常
   **/
#+END_SRC


** 打印对象尽量使用 toString() 方法

若直接打印对象变量，当打印结果为 null ，则可能对象本身为 null ，或者 toString() 方法返回值为 null

而使用 toString() 方法，若对象为 null ，则报告空指针异常


** Runtime

Runtime 对象代表了 JVM

** 匿名构造方法

在所有构造方法调用前调用

#+BEGIN_SRC java
class Test {
    {
        // This is anonymous constructor
    }

    public Test() {

    }
}
#+END_SRC
