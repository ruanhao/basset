#+TITLE:     format
#+AUTHOR:    Hao Ruan
#+EMAIL:     ruanhao1116@gmail.com
#+LANGUAGE:  en
#+LINK_HOME: http://www.github.com/ruanhao
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="../css/style.css" />
#+OPTIONS:   H:2 num:nil \n:nil @:t ::t |:t ^:{} _:{} *:t TeX:t LaTeX:t
#+STARTUP:   showall


* 1, 数值转换

#+BEGIN_EXAMPLE
  class Data(object):

          def __str__(self):
              return 'str'

          def __repr__(self):
              return 'räpr'
#+END_EXAMPLE

#+BEGIN_SRC python
  '{0!s} {0!r}'.format(Data())    # str räpr

  '{0!r} {0!a}'.format(Data())    # räpr r\xe4pr
#+END_SRC


* 2, 填充与对齐

#+BEGIN_SRC python
  '{:>10}'.format('test')         # [      test]
  '{:10}'.format('test')          # [test      ]
  '{:^10}'.format('test')         # [   test   ]
  '{:_<10}'.format('test')        # [test______]
#+END_SRC


* 3, 字符串截断

#+BEGIN_SRC python
  '{:.5}'.format('xylophone')     # [xylop]
  '{:10.5}'.format('xylophone')   # [xylop     ]
#+END_SRC


* 4, 精度

#+BEGIN_SRC python
  '{:06.2f}'.format(3.141592653589793)  # [003.14]
  '{:04d}'.format(42)                   # [0042]
  '{:+d}'.format(42)                    # [+42]
  '{: d}'.format(42)                    # [ 42]
  '{: d}'.format(-42)                   # [-42]
  '{:=5d}'.format((- 23))               # [-  23]
  '{:=+5d}'.format((23))                # [+  23]
#+END_SRC


* 5, 占位符

#+BEGIN_EXAMPLE
  data = {'first': 'Hodor', 'last': 'Hodor!'}
#+END_EXAMPLE

#+BEGIN_SRC python
  '{first} {last}'.format(**data)  # [Hodor Hodor!]
  '{first} {last}'.format(first='Hodor', last='Hodor!')  # [Hodor Hodor!]
#+END_SRC


* 6, 获取属性

#+BEGIN_EXAMPLE
  person = {'first': 'Jean-Luc', 'last': 'Picard'}
  data = [4, 8, 15, 16, 23, 42]

  class Plant(object):
      type = 'tree'
      kinds = [{'name': 'oak'}, {'name': 'maple'}]
#+END_EXAMPLE

#+BEGIN_SRC python
  '{p[first]} {p[last]}'.format(p=person)  # [Jean-Luc Picard]
  '{d[4]} {d[5]}'.format(d=data)           # [23 42]

  '{p.type}: {p.kinds[0][name]}'.format(p=Plant())  # [tree: oak]
#+END_SRC


* 7, 时间

#+BEGIN_SRC python
  from datetime import datetime

  '{:%Y-%m-%d %H:%M}'.format(datetime(2001, 2, 3, 4, 5))  # [2001-02-03 04:05]
#+END_SRC


* 8, 参数化格式

#+BEGIN_SRC python
  '{:{align}{width}}'.format('test', align='^', width='10')  # [   test   ]

  '{:.{prec}} = {:.{prec}f}'.format('Gibberish', 2.7182, prec=3)  # [Gib = 2.718]

  '{:{width}.{prec}f}'.format(2.7182, width=5, prec=2)  # [ 2.72]

  '{:{prec}} = {:{prec}}'.format('Gibberish', 2.7182, prec='.3')  # [Gib = 2.72]

  '{:{dfmt} {tfmt}}'.format(dt, dfmt='%Y-%m-%d', tfmt='%H:%M')  # [2001-02-03 04:05]

  '{:{}{}{}.{}}'.format(2.7182818284, '>', '+', 10, 3)  # [     +2.72]
  '{:{}{sign}{}.{}}'.format(2.7182818284, '>', 10, 3, sign='+')  # [     +2.72]
#+END_SRC


* 8, 定制化

#+BEGIN_EXAMPLE
  class HAL9000(object):

      def __format__(self, format):
          if (format == 'open-the-pod-bay-doors'):
              return "I'm afraid I can't do that."
          return 'HAL 9000'
#+END_EXAMPLE


#+BEGIN_SRC python
  '{:open-the-pod-bay-doors}'.format(HAL9000())  # [I'm afraid I can't do that.]
#+END_SRC


* 参考链接：

[[https://pyformat.info/][pyformat]]