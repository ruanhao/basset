#+TITLE:     Pandas
#+AUTHOR:    Hao Ruan
#+EMAIL:     haoru@cisco.com
#+LANGUAGE:  en
#+LINK_HOME: http://www.github.com/ruanhao
#+OPTIONS:   h:6 html-postamble:nil html-preamble:t tex:t f:t ^:nil
#+STARTUP:   showall
#+TOC:       headlines 4
#+HTML_DOCTYPE: <!DOCTYPE html>
#+HTML_HEAD: <link href="http://fonts.googleapis.com/css?family=Roboto+Slab:400,700|Inconsolata:400,700" rel="stylesheet" type="text/css" />
#+HTML_HEAD: <link href="../org-html-themes/solarized-light/style.css" rel="stylesheet" type="text/css" />
#+HTML: <div class="outline-2" id="meta">
| Author   | {{{author}}} ({{{email}}})    |
| Date     | {{{time(%Y-%m-%d %H:%M:%S)}}} |
#+HTML: </div>





* 时间序列


** 固定时刻(pd.Timestamp)

*** 日期范围(data_range)

**** 小时

#+BEGIN_SRC ipython
  pd.date_range(start='20160320', periods=10, freq='4H')
#+END_SRC


**** 日

#+BEGIN_SRC ipython
  pd.date_range('20160320', '20160331')
  pd.date_range(start='20160320', periods=10)
#+END_SRC

**** 星期

#+BEGIN_SRC ipython
  pd.date_range(start='20160320', periods=10, freq='W')
#+END_SRC

**** 月

#+BEGIN_SRC ipython
  pd.date_range(start='20160320', periods=10, freq='M')
#+END_SRC


**** 每个月最后一个工作日组成的索引


#+BEGIN_SRC ipython
  pd.date_range(start='20160320', periods=10, freq='BM')
#+END_SRC


**** 规则化时间戳

#+BEGIN_SRC ipython
  pd.date_range(start='2016-03-20 16:23:32', periods=10, normalize=True)
#+END_SRC


** 固定时期(pd.Period)

=pd.Period= 表示时期，比如几日，月或几个月等。比如用来统计每个月的销售额，就可以用时期作为单位。


*** 运算

#+BEGIN_SRC ipython :session :exports both :results output
  p1 = pd.Period(2010)
  p2 = p1 + 2
  p3 = pd.Period(2016, freq='M')
  log("p1", p1)
  log("p2", p2)
  log("p3", p3)
  log("p2 - p1", p2 - p1)
  log("p3 + 3", p3 + 3)

#+END_SRC



*** 时期范围

**** 月

#+BEGIN_SRC ipython
  pd.period_range(start='2016-01', periods=12, freq='M')
  pd.period_range(start='2016-01', end='2016-10', freq='M')
#+END_SRC

**** 季度

#+BEGIN_SRC ipython
  pd.period_range(start='2016Q1', periods=10, freq='Q')
#+END_SRC

*** 频率转换

- A-DEC :: 以 12 月份作为结束的年时期
- A-NOV :: 以 11 月份作为结束的年时期
- Q-DEC :: 以 12 月份作为结束的季度时期

**** 年转月

#+BEGIN_SRC ipython :session :exports both :results output
  p = pd.Period('2016', freq='A-DEC')
  log("p.asfreq('M', how='start')", p.asfreq('M', how='start'))
  log("p.asfreq('M', how='end')", p.asfreq('M', how='end'))
#+END_SRC

**** 指定年的结束月份

#+BEGIN_SRC ipython :session :exports both :results output
  p = pd.Period('2016-04', freq='M')
  # 以年为周期，以一年中的 3 月份作为年的结束（财年）
  log("p.asfreq('A-MAR')", p.asfreq('A-MAR'))
#+END_SRC


#+BEGIN_SRC ipython :session :exports both :results output
  p = pd.Period('2016Q4', 'Q-JAN')

  # 以 1 月份结束的财年中，2016Q4 的时期是指 2015-11-1 到 2016-1-31
  log("p.asfreq('D', how='start')", p.asfreq('D', how='start'))
  log("p.asfreq('D', how='end')", p.asfreq('D', how='end'))

  # 获取该季度倒数第二个工作日下午4点的时间戳
  p4pm = (p.asfreq('B', how='end') - 1).asfreq('T', 'start') + 16 * 60
  log("p4pm", p4pm)
  log("p4pm.to_timestamp()", p4pm.to_timestamp())
#+END_SRC


** Timestamp 和 Period 相互转换

#+BEGIN_SRC ipython :session :exports both :results output
  ts = pd.Series(np.random.randn(5),
                 index = pd.date_range('2016-01-01',
                                       periods=5,
                                       freq='M'))
  log("ts", ts)
  log("ts.to_period()", ts.to_period())
#+END_SRC

#+BEGIN_SRC ipython :session :exports both :results output
  ts = pd.Series(np.random.randn(5),
                 index = pd.date_range('2016-12-29', periods=5, freq='D'))
  log("ts", ts)
  pts = ts.to_period(freq='M')
  log("pts", pts)
  log("pts.groupby(level=0).sum()", pts.groupby(level=0).sum())
  log("pts.to_timestamp(how='end')", pts.to_timestamp(how='end'))
#+END_SRC


** 重采样

*** 降采样（高频率 -> 低频率）

如 5 分钟股票交易数据转换为日交易数据

#+BEGIN_SRC ipython :session :exports both :results output
  ts = pd.Series(np.random.randint(0, 50, 60),
                 index=pd.date_range('2016-04-25 09:30', periods=60, freq='T'))
  log("ts.head(10)", ts.head(10))
#+END_SRC

**** 起始时间为行索引

#+BEGIN_SRC ipython :session :exports both :results output
  log("ts.resample('5min', how='sum')", ts.resample('5min', how='sum'))
#+END_SRC

**** 结束时间为行索引

#+BEGIN_SRC ipython :session :exports both :results output
  log("ts.resample('5min', how='sum', label='right')",
      ts.resample('5min', how='sum', label='right'))
#+END_SRC


**** OHLC 重采样

金融数据专用：Open/High/Low/Close

#+BEGIN_SRC ipython :session :var path="img/fig37020WwK.png"
  show_dataframe(ts.resample('5min', how='ohlc'))
#+END_SRC

#+NAME: img/fig37020WwK.png
#+CAPTION: ohlc
[[file:img/fig37020WwK.png]]


*** 升采样/插值（低频率 -> 高频率）

#+BEGIN_SRC ipython :session :var path="img/fig37020wEX.png"
  # 以周为单位，每周五采样
  df = pd.DataFrame(np.random.randint(1, 50, 2),
                    index=pd.date_range('2016-04-22', periods=2, freq='W-FRI'))
  show_dataframe(df)
#+END_SRC

#+NAME: img/fig37020wEX.png
#+CAPTION: 示例数据
[[file:img/fig37020wEX.png]]

#+BEGIN_SRC ipython :session :var path="img/fig37020KZj.png"
  show_dataframe(df.resample('D'))
#+END_SRC

#+NAME: img/fig37020KZj.png
#+CAPTION: 周->天
[[file:img/fig37020KZj.png]]


#+BEGIN_SRC ipython :session :var path="img/fig37020ktv.png"
  show_dataframe(df.resample('D', fill_method='ffill', limit=3))
#+END_SRC

#+NAME: img/fig37020ktv.png
#+CAPTION: 向前插值
[[file:img/fig37020ktv.png]]


#+BEGIN_SRC ipython :session :var path="img/fig37020jBF.png"
  show_dataframe(df.resample('W-MON', fill_method='ffill'))
#+END_SRC

#+NAME: img/fig37020jBF.png
#+CAPTION: 以周为单位，每周一采样
[[file:img/fig37020jBF.png]]



** 时期重采样

#+BEGIN_SRC ipython :session :var path="img/fig370209VR.png"
  df = pd.DataFrame(np.random.randint(2, 30, (24, 4)),
                    index=pd.period_range('2015-01', '2016-12', freq='M'),
                    columns=list('ABCD'))
  show_dataframe(df)
#+END_SRC

#+NAME: img/fig370209VR.png
#+CAPTION: 示例数据
[[file:img/fig370209VR.png]]

*** 降采样

#+BEGIN_SRC ipython :session :var path="img/fig37020Xqd.png"
  adf = df.resample('A-DEC', how='mean')
  show_dataframe(adf)
#+END_SRC

#+NAME: img/fig37020Xqd.png
#+CAPTION: 年重采样 (a)
[[file:img/fig37020Xqd.png]]


#+BEGIN_SRC ipython :session :var path="img/fig37020x-p.png"
  show_dataframe(df.resample('A-MAY', how='mean'))
#+END_SRC

#+NAME: img/fig37020x-p.png
#+CAPTION: 年重采样 (b)
[[file:img/fig37020x-p.png]]


*** 升采样

#+BEGIN_SRC ipython :session :var path="img/fig37020LT2.png"
  show_dataframe(adf.resample('Q-DEC'))
#+END_SRC

#+NAME: img/fig37020LT2.png
#+CAPTION: 默认升采样行为
[[file:img/fig37020LT2.png]]

#+BEGIN_SRC ipython :session :var path="img/fig37020KnL.png"
  show_dataframe(adf.resample('Q-DEC', fill_method='ffill'))
#+END_SRC

#+NAME: img/fig37020KnL.png
#+CAPTION: 向前插值
[[file:img/fig37020KnL.png]]


** 从文件中读取日期序列

#+BEGIN_SRC ipython
  pd.read_csv('xxx.csv', index_col='xxx', parse_dates=True)
#+END_SRC

Possible values of parse_dates:
- [0, 2]: Parse columns 0 and 2 as separate dates
- [ [0, 2] ]: Group columns 0 and 2 and parse as single date
- {'Date': [0, 2]}: Group columns 0 and 2, parse as single date in a column named Date.

*** 自定义时间日期解析函数

#+BEGIN_SRC ipython
  def date_parser(s):
      s = '2016/' + s
      d = datetime.strptime(s, '%Y/%m/%d')
      return d

  pd.read_csv('xxx.csv', index_col='xxx',
              parse_dates=True, date_parser=date_parser)
#+END_SRC
