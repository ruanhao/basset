#+Title: Idiom
#+OPTIONS: ^:nil



* Modules that also can add class level methods to the target class
#+BEGIN_SRC ruby
  module Foo
    module ClassMethods
      def guitar
        "gently weeps"
      end
    end
    def self.included(klass)
      klass.extend ClassMethods
    end
  end

  class Bar
    include Foo
  end

  puts Bar.guitar
#+END_SRC

* Enumerators and Enumerables
- First, calling =each= on an array, returns an =Enumerator= object
- =Enumerable= is a module used as a mixin in the =Array= class. It provides a number of enumerators like =map=, =select=, =inject=
- The =Enumerable= module itself doesn't define the =each= method. _It's the responsibility of the class that is including this module to do so_
- This =Array= class, consequently, defines the =each= method. It returns an object of the type =Enumerator= _when no block is given_
- If your collection object implements the =each= method, =Enumerable= will implement the rest of the collection methods for you
