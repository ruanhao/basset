# -*- mode: snippet -*-
#+TITLE:     Curl
#+AUTHOR:    Hao Ruan
#+EMAIL:     haoru@cisco.com
#+LANGUAGE:  en
#+LINK_HOME: http://www.github.com/ruanhao
#+OPTIONS: h:6 html-postamble:nil html-preamble:t tex:t f:t ^:nil
#+HTML_DOCTYPE: <!DOCTYPE html>
#+HTML_HEAD: <link href="http://fonts.googleapis.com/css?family=Roboto+Slab:400,700|Inconsolata:400,700" rel="stylesheet" type="text/css" />
#+HTML_HEAD: <link href="../org-html-themes/css/style.css" rel="stylesheet" type="text/css" />
 #+HTML: <div class="outline-2" id="meta">
| Author   | {{{author}}} ({{{email}}})    |
| Date     | {{{time(%Y-%m-%d %H:%M:%S)}}} |
#+HTML: </div>
#+TOC: headlines 3


* 使用 cookie

#+BEGIN_SRC sh
  -c <cookie-file> # 使用文件保存 cookie
  -b "name=data"   # 以键值对的形式提供 cookie
  -b <cookie-file> # 以文件的形式提供 cookie
#+END_SRC

* URL 编码

#+BEGIN_SRC sh
  curl -G --data-urlencode "search=hello world"
  # -G 表示指定 GET 方法，并将 payload 追加至 request uri 后（用 ? 分隔)
#+END_SRC

* SSL/TLS

#+BEGIN_SRC sh
  -E <cert-file>     # 提供证书文件
  --key <key-file>   # 提供私钥文件
  --cacert <ca-file> # 提供授信 CA 列表文件，也可由环境变量 CURL_CA_BUNDLE 指定
  -k                 # 忽略服务器证书的认证
#+END_SRC

[[http://curl.haxx.se/ca/cacert.pem][授信 CA 列表]]

* 禁用 Expect 机制

使用 curl 进行上传时，有些服务器会返回 =Expect: 100-continue= ，导致上传失败。解决方案：

#+BEGIN_SRC sh
  curl -X PUT -Ss -H 'Expect:' -d@<payload-file> <url>
#+END_SRC

[[http://www.iandennismiller.com/posts/curl-http1-1-100-continue-and-multipartform-data-post.html][curl: HTTP/1.1 100 CONTINUE and multipart/form-data POST]]

* 建立 WebSocket 连接

#+BEGIN_SRC sh
  curl -i -N -H "Connection: Upgrade" -H "Upgrade: websocket" -H "Origin: http://localhost" $url
#+END_SRC
